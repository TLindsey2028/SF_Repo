<apex:page title="SOQL Query Tool">
    <!--
    (c) Appirio
    
    7/18/2007  Glenn Weinstein     Gracefully handle HTML tags in cell values
    7/20/2007  Glenn Weinstein     Add cool iframe resize function to eliminate inner scrollbars
    8/21/2007  Glenn Weinstein     Tweaked iframe resize; load by default with query text selected
    8/27/2007  Glenn Weinstein     Resize iframe after desc() call
    3/25/2008  Glenn Weinstein     Added checkbox option to only show table result, or only raw result
    3/26/2008  Glenn Weinstein     Added query timing
    8/20/2010  Glenn Weinstein     Added option to include deleted records in query
    10/28/2010 Glenn Weinstein     Converted from s-control to Visualforce page
    3/30/2011  Glenn Weinstein     Added "LIST OBJECTS" command
    10/21/2011 Glenn Weinstein     For the LIST command, show the customSetting field
    8/23/2012  Glenn Weinstein     Added URL "query" parameter
    9/23/2012  Glenn Weinstein     Added permalink feature
    9/30/2012  Glenn Weinstein     Added "Show result as CSV" feature
    10/25/2012 Glenn Weinstein     Added KeyPrefix and Label to LIST output
    2/22/2016  Glenn Weinstein     Filter out BillingAddress, ShippingAddress, MailingAddress, OtherAddress fields from queries to avoid
    errors, since you can't query these fields directly
    3/23/2016  Glenn Weinstein     URL-encode permalinks
    5/17/2016  Glenn Weinstein     Display warning if query includes base64 field
    12/9/2016  Glenn Weinstein     Display "Nillable" for DESC output
    6/9/2017   Glenn Weinstein     Hyperlink KeyPrefix (in LIST output) to matching SFDC tab
    3/5/2018  Nick Schumacher      Lightning styles applied, updated Api version, reformatted output
    3/7/2018   Chris Bruzzi        Made permalink a hyperlink and fixed permalink when no URL parameters
    3/14/2018 Nick Schumacher      Query font back to Courier, fixed checkboxes spacing issue, logo = static resource
    5/2/2018  Nick Schumacher      Removed brand band, spinner for LEX only, "please wait" for classic
    -->
    <apex:slds />
<head>

<title>SOQL Query Tool</title>

<style type="text/css">
    .textareaStyle{font-family: courier new, courier, sans-serif; font-size:11px}
    .floating-section{ margin: 20px 10px; padding: 20px; border-radius: 10px; box-shadow: 0px 1px 5px #80808085; background: white;}
    .codeStyle{font-family: courier new, courier, sans-serif !important; font-size:11px;}
    .textareaStyle {padding: 10px;}
    .slds-scope textarea {min-width: 100%;}
    .slds-card {border-color: red !important;}
    .slds-scope .slds-table_bordered { border:1px solid rgb(221, 219, 218) !important; }
</style>
    
<script language="javascript" src="/soap/ajax/42.0/connection.js" type="text/javascript" />
<script type="text/javascript">sforce.connection.sessionId = "{!$Api.Session_ID}";</script>
<script type="text/javascript">
    // these init() and onload() functions are a replacement for what you'd typically use a body onload for.  Since this is Visualforce,
    // using body onload isn't recommended.

    function init() {
        document.getElementById('runQuery').queryString.focus();
        if ("{!$CurrentPage.parameters.query}" != "") {
            document.getElementById('queryString').value = "{!$CurrentPage.parameters.query}";
            runQuery();
        }
    }
    
    var previousOnload = window.onload;
    
    window.onload = function() {
        if (previousOnload) {
            previousOnload();
        }
        init();
    }
</script>

<script type="text/javascript">

    var callType;
    var queryStartTime = 0;
    
    function trim(inString) {
        return inString.replace(/^\s+/,'').replace(/\s+$/,'');
    }

    // returns false if the provided "testfield" is one of a list of known "system" fields in a SOQL result set.
    // this helps avoid display of "system fields" that the user doesn't care about.
    function validSOQLResultField(testField) {
        if (callType == "DESC") {    // DescribeSObjects() returns a bunch of stuff; we only want a few columns
            if (testField == "label") return true;
            if (testField == "length") return true;
            if (testField == "name") return true;
            if (testField == "custom") return true;
            if (testField == "nillable") return true;
            if (testField == "type") return true;
            return false;
        }
        
        if (callType == "LIST") {    // when listing Sobjects, just show a few fields
            if (testField == "name") return true;
            if (testField == "customSetting") return true;
            if (testField == "keyPrefix") return true;
            if (testField == "label") return true;
            return false;
        }

        if (testField == "type") return false;
        if (testField == "toXml") return false;
        if (testField == "writeValue") return false;
        if (testField == "get") return false;
        if (testField == "set") return false;
        if (testField == "getArray") return false;
        if (testField == "getBoolean") return false;
        if (testField == "getDate") return false;
        if (testField == "getDateTime") return false;
        if (testField == "getInt") return false;
        if (testField == "getFloat") return false;
        if (testField == "getBase64Binary") return false;
        if (testField == "toString") return false;
        if (testField == "MailingAddress") return false;
        if (testField == "BillingAddress") return false;
        if (testField == "ShippingAddress") return false;
        if (testField == "OtherAddress") return false;
    
        return true;
    }

    /* figure out the row header names, based on the 1st row of values.
     * the unusual parameter "valueSoFar" is needed since this function is recursive - we may have to
     * build the eventual value of a header label, piece-by-piece.
     */
    function displayTableHeaderLabel(cellLabel, cellValue, valueSoFar) {
        var returnHTML  = "";
        
        if (valueSoFar != null)
            valueSoFar += ".";   // display related objects using dot notation, e.g. Account.Object
        else
            valueSoFar = "";

        if (validSOQLResultField(cellLabel)) {
            if (cellValue) {
                if (cellValue.toString().substring(0,6) == "{type:") {  // looks like a related object
                    for (k in cellValue) {
                        returnHTML += displayTableHeaderLabel(k, cellValue[k], valueSoFar + cellLabel);  // recursive call - handles many layers of related objects
                    }
                } else {
                    returnHTML += "<th>" + valueSoFar + cellLabel + "<\/th>";
                }
            } else {
                returnHTML += "<th>" + valueSoFar + cellLabel + "<\/th>";
            }
        }
        return returnHTML;
    }

    function displayCellValue(cellLabel, cellValue) {
        var returnHTML  = "";
        var k;
        
        if (validSOQLResultField(cellLabel)) {
            if (cellValue) {
                if (cellValue.toString().substring(0,6) == "{type:") {  // looks like a related object
                    for (k in cellValue) {
                        returnHTML += displayCellValue(k, cellValue[k]);   // recursive call - handles many layers of related objects
                    }
                } else {
                    // it's not a related object... it's just a plain old field
                    if (cellLabel == "Id" || cellLabel == "keyPrefix") {
                        returnHTML += "<td><a href='/" + cellValue + "' target='_blank'>" + cellValue + "<\/td>";
                    } else {
                        if (cellValue.toString().substring(0,6) == "{done:") {  // looks like a list of objects in the cell (the result of a subquery)
                            returnHTML += "<td>" + generateResultsTable(cellValue.getArray("records")) + "<\/td>";
                        } else {
                            returnHTML += "<td>" + htmlEscape(cellValue) + "<\/td>";
                        }
                    }
                }
            } else {
                // cell is null
                returnHTML += "<td><\/td>";
            }
        }
        return returnHTML;
    }

    function generateResultsTable(records) {
        var returnHTML = "";
        var i = 0;
        var j;
        
        // write out table header
        if (records.length > 0) {
            returnHTML += "<table class='slds-table slds-table_bordered slds-table_cell-buffer'><thead><tr class='slds-text-title_caps'>";
            returnHTML += "<th>Row<\/th>";
            for (j in records[0]) {
                returnHTML += displayTableHeaderLabel(j, records[0][j]);
            }
            returnHTML += "<\/tr><\/thead><tbody>";
        }

      // write out cell values for each row
      for (i = 0; i < records.length; i++) {
        returnHTML += "<tr><td>" + (i + 1) + "<\/td>";
        for (j in records[i]) {
          returnHTML += displayCellValue(j, records[i][j]);
        }
        returnHTML += "<\/tr>";
      }
      returnHTML += "<\/tbody><\/table>";
    
      return returnHTML;
    }
    
    // Escape HTML characters, so the string appears in inline HTML with HTML tags, as opposed to rendered HTML.
    function htmlEscape(string) {
        var newString = string.replace(/>/g, "&gt;");
        newString = newString.replace(/</g, "&lt;");
        return newString;
    }
    
    // Process "SELECT *". Replace * with the actual list of fields
    function convertSelectStarQuery(queryString) {
        // figure out object name
        var startOfObjectName = queryString.toUpperCase().indexOf("FROM") + 5;
        while (queryString.charAt(startOfObjectName) == " ") {
            startOfObjectName++;
        }
        var firstSpaceAfterObjectName = queryString.indexOf(" ", startOfObjectName);
        var objectName = "";
        if (firstSpaceAfterObjectName == -1)
            objectName = queryString.substr(startOfObjectName);
        else
            objectName = queryString.substring(startOfObjectName, firstSpaceAfterObjectName);
        objectName = trim(objectName);
        
        // get a list of fields for that object
        var describeSObjectResult;
        try {
            describeSObjectResult = sforce.connection.describeSObjects([objectName]);
        } catch (error) {
            document.getElementById("result").innerHTML = "<div class='slds-text-title_caps' style='margin: 0px 0px 5px 10px;color:red'>SFDC query returned an error<\/div><div class='slds-box slds-theme_shade slds-m-bottom_small' style='color:red'>" + error + "<\/div>";
            return "";
        }
        var fieldArray = describeSObjectResult[0].getArray("fields");
        var fieldString = "";
        for (i=0; i < fieldArray.length; i++)  {
            if (i > 0)
                fieldString += ", ";
            fieldString += fieldArray[i].get("name");
        }
        
        queryString = "SELECT " + fieldString + queryString.substr(8);
        return queryString;
    }
    
    // Executes the SOQL query. Displays loading and errors
    function runQuery() {
        document.getElementById("queryStatsDiv").innerHTML ="";
        if({!$User.UITheme == 'Theme4d'}) {
            document.getElementById("result").innerHTML =
                "<div class='slds-spinner_container'>"+
                "<div role='status' class='slds-spinner slds-spinner_medium slds-spinner_brand'>"+
                "<span class='slds-assistive-text'>Loading<\/span>"+
                "<div class='slds-spinner__dot-a'><\/div>" +
                "<div class='slds-spinner__dot-b'><\/div>"+
                "<\/div><\/div>";
            }
        else {
            document.getElementById("result").innerHTML = "<div class='slds-text-title_caps' style='margin: 0px 0px 5px 10px;color:#0070d2'>Please Wait<\/div><div class='slds-box slds-theme_shade slds-m-bottom_small' style='color:#0070d2'>" + "Executing SOQL query..." + "<\/div>";
        }
        var queryString = document.getElementById("runQuery").queryString.value;
        
        // see if this is a LIST OBJECTS call
        if (queryString.substr(0, 4).toUpperCase() == "LIST") {
            callType = "LIST";
            var describeGlobal;
            try {
                describeGlobal = sforce.connection.describeGlobal();
            } catch (error) {
                document.getElementById("result").innerHTML = "<div class='slds-text-title_caps' style='margin: 0px 0px 5px 10px;color:red'>SFDC query returned an error<\/div><div class='slds-box slds-theme_shade slds-m-bottom_small' style='color:red'>" + error + "<\/div>";
                return;
            }
            var objectList = describeGlobal.getArray("sobjects");
            resultHTML = "";
            if (document.getElementById("showRawResult").checked) {
                resultHTML += "Raw SOQL result:<br /><br />";
                resultHTML += describeGlobal + "<br /><br />";
            }
            resultHTML += generateResultsTable(objectList);
            document.getElementById("result").innerHTML = "<div class='slds-text-title_caps' style='margin: 0px 0px 5px 10px;'>Result<\/div>" + "<div class='slds-box slds-theme_shade slds-m-bottom_small'> " + resultHTML + "<\/div>";
            return;
            
        }
        
        // see if this is a DESC call
        if (queryString.substr(0,4).toUpperCase() == 'DESC') {
            callType = "DESC";
            var objectName = queryString.substr(5);
            var describeSObjectResult;
            try {
                describeSObjectResult = sforce.connection.describeSObjects([objectName]);
            } catch (error) {
                document.getElementById("result").innerHTML = "<div class='slds-text-title_caps' style='margin: 0px 0px 5px 10px;color:red'>SFDC query returned an error<\/div><div class='slds-box slds-theme_shade slds-m-bottom_small' style='color:red'>" + error + "<\/div>";
                return;
            }
            var resultHTML = "";
            if (document.getElementById("showRawResult").checked) {
                resultHTML += "Raw SOQL result:<br /><br />";
                resultHTML += describeSObjectResult + "<br /><br />";
            }
            resultHTML += generateResultsTable(describeSObjectResult[0].getArray("fields"));
            
            document.getElementById("result").innerHTML ="<div class='slds-text-title_caps' style='margin: 0px 0px 5px 10px;'>Result<\/div>" + "<div class='slds-box slds-theme_shade slds-m-bottom_small' style='overflow:auto'> " + resultHTML + "<\/div>";
            return;
        }
        
        // see if this is a "SELECT *" call
        if (queryString.substr(0,8).toUpperCase() == 'SELECT *') {
            queryString = convertSelectStarQuery(queryString);
            if (queryString == "") return;  // error handling is already taken care of by convertSelectStarQuery()
            document.getElementById("queryString").value = queryString;
        }
        
        // regular SOQL query, just submit it to SFDC asynchronously
        callType = "SOQL";
        queryStartTime = new Date().getTime();
        
        if (document.getElementById("includeDeletedRecords").checked) {
            var result = sforce.connection.queryAll(queryString, {onSuccess:processQueryResults, onFailure:showQueryError});
        } else {
            console.log(queryString);
            var result = sforce.connection.query(queryString, {onSuccess:processQueryResults, onFailure:showQueryError});
        }
    }
    
    // Callback function when SOQL query returns from SFDC successfully
    function processQueryResults(queryResult) {
        var queryEndTime = new Date().getTime();
        var queryTimeElapsed = (queryEndTime - queryStartTime);
        var resultHTML = "";
        var records = queryResult.getArray("records");
        var base = "";
        var permalink = "";
        var urlParamIndex = document.URL.indexOf('?');
        
        //Show query stats
        document.getElementById("queryStatsDiv").innerHTML = 
            "<div class='slds-text-title_caps slds-m-bottom_small' align='center'>Number of records returned: " +
            queryResult.size + ", database query time: " + queryTimeElapsed/1000 + " sec <\/div>";
        
        //Show or don't show rawResult box
        if (document.getElementById("showRawResult").checked) {
            document.getElementById("rawResultDiv").style.display = "block";
            document.getElementById("rawResultDiv").innerHTML = 
                "<div class='slds-text-title_caps' style='margin: 0px 0px 5px 10px;'>Raw SOQL result<\/div>"+
                "<div class='slds-box slds-theme_shade slds-m-bottom_small'>"+ queryResult + "<\/div>";
        } else {
            document.getElementById("rawResultDiv").style.display = "none";
            document.getElementById("rawResultDiv").innerHTML = "";
        }
        
        //Show or don't show Permalink box
        if (document.getElementById("showPermalink").checked){
            // strip any extraneous URL parameters (e.g. "?id=00550000000vgY4") from the current page URL
            if (urlParamIndex !== -1) {
                base = document.URL.substr(0, urlParamIndex);
            } else {
                base = document.URL;                
            }

            // tack on the current query (URL-encoded) as a parameter
            permalink =  base + "?query=" + encodeURI(document.getElementById("queryString").value);
            document.getElementById("permalinkDiv").style.display = "block";
            document.getElementById("permalinkDiv").innerHTML = 
                "<div class='slds-text-title_caps' style='margin: 0px 0px 5px 10px;'>Permalink<\/div>"+
                "<div class='slds-box slds-theme_shade slds-m-bottom_small' style='overflow:auto'><a href='"+ permalink + "'>" + permalink + "<\/a><\/div>";
        } else {
            document.getElementById("permalinkDiv").style.display = "none";
            document.getElementById("permalinkDiv").innerHTML = "";
        }
        
        //Show or don't the results table
        if (document.getElementById("showTableResult").checked)
            resultHTML += generateResultsTable(records);
        
        // there's a weird situation we need to handle.  If the query includes a base64 field, the result set will have just
        // 1 row, it will include a QueryLocator, and it will indicate that done = false.  In this case, we'll want to give the
        // user a heads-up on what's happening.
        
        if (queryResult.size <= 2000 && queryResult.getBoolean("done") == false) {
            resultHTML += "<div class='slds-box slds-theme_shade slds-m-bottom_small' style='color:blue'>Your query should have returned " + queryResult.size + " rows, but only 1 row was returned.  This is ";
            resultHTML += "due to native SFDC behavior for a SOQL query that contains a field whose datatype is base64. ";
            resultHTML += "You may wish to remove this field and re-run your query.  (You can determine which field is base64 by ";
            resultHTML += "running the command 'DESC YourObjectName'.)<\/div>";
        }
        
        //Show or don't the CSV result
        if (document.getElementById("showCSVResult").checked) {
            
            // build a textarea, then fill it with the same HTML that we use to make our results table.
            // we'll literally call the same function - generateResultsTable() - and then strip out the HTML tags,
            // replacing them with CSV-style formatting (values in double quotes, rows separated by a carriage return).
            // note - if a cell value actually contains an HTML string, that's okay - it'll be HTML-encoded, so
            // it'll survive our stripping.
            
            document.getElementById("csvDiv").style.display = "block";
            document.getElementById("csvDiv").innerHTML =
                "<div class='slds-text-title_caps' style='margin: 0px 0px 5px 10px;'>CSV<\/div>" +
                "<textarea id='csv' rows='10' cols='120' class='textareaStyle slds-box slds-theme_shade slds-m-bottom_small' " +
                "onclick='document.getElementById(\"csv\").focus(); document.getElementById(\"csv\").select();'>" +
                generateResultsTable(records)
                .replace(/\"/g, "\\\"")                     // first, let's escape any double-quotes in the result string
                .replace(/<tr>/g, "")                       // remove all tr tags
                .replace(/<tr class='slds-text-title_caps'>/g, "")  //remove the custom tr tag
                .replace(/<\/tr>/g, "\n")                   // replace all /tr tags with carriage returns
                .replace(/<thead>/g, "")                    // remove all thead tags
                .replace(/<\/thead>/g, "")                  // remove all /thead tags
                .replace(/<td>/g, "\"")                     // replace all td tags with a double-quote
                .replace(/<\/td>/g, "\",")                  // replace all /td tags with another double-quote
                .replace(/<th>/g, "\"")                     // treat th tags like td tags
                .replace(/<\/th>/g, "\",")                  // treat /th tags like /td tags
                .replace(/<table class='slds-table slds-table_bordered slds-table_cell-buffer'>/g, "")   // remove the top-level table tag
                .replace(/<\/table>/g, "")                  // remove the top-level /table tag
                .replace(/<tbody>/g, "")                    // remove the tbody tag
                .replace(/<\/tbody>/g, "")                  // remove the /tbody tag
                .replace(/<a [^>]*>/g, "") +                // remove all anchor tags (which we normally put around ID columns)
                "<\/textarea>";
        } else {
            document.getElementById("csvDiv").style.display = "none";
            document.getElementById("csvDiv").innerHTML = "";   
        }
        if (resultHTML != "") {
            document.getElementById("result").innerHTML = "<div class='slds-text-title_caps' style='margin: 0px 0px 5px 10px;'>Result<\/div>" + "<div class='slds-box slds-theme_shade slds-m-bottom_small' style='overflow:auto;padding:10px;'> " + resultHTML + "<\/div>";
        } else {
            document.getElementById("result").innerHTML = "";
        }
    }

    // Callback function when SOQL query returns from SFDC with a failure
    function showQueryError(error) {
        document.getElementById("result").innerHTML = "<div class='slds-text-title_caps' style='margin: 0px 0px 5px 10px;color:red'>SFDC query returned an error<\/div><div class='slds-box slds-theme_shade slds-m-bottom_small' style='color:red'>" + error + "<\/div>";
    }
</script>
    
</head>
    <body>
        <div class="slds-scope">
            <!-- Header -->
            <header class="floating-section slds-text-heading_medium">
                <div style="display:inline-block; margin-left: 10px;">
                    <h1>
                        Appirio SOQL Query Tool
                    </h1>
                </div>
            </header>
            
            <!-- Body -->
            <section class="floating-section">
                <form id="runQuery" action="javascript:runQuery()">
                    <!-- Text area header -->
                    <div style="margin-bottom: 10px;">
                        <div class="slds-grid">
                        <div class="slds-text-title_caps slds-size_2-of-12" style="display:inline-block; margin-left: 10px;">Your Query</div>
                        <!-- Start Display Options -->
                        <div class="slds-size_10-of-12" align="right" style="margin-top: -2px">
                            <!-- Start Table checkbox -->
                            <div style="display:inline-block; margin-right: 0px;">
                                <div class="slds-form-element">
                                    <div class="slds-form-element__control">
                                        <span class="slds-checkbox">
                                            <input type="checkbox" id="showTableResult" name="showTableResult" checked="yes"/>
                                            <label class="slds-checkbox__label" for="showTableResult">
                                                <span class="slds-checkbox_faux"></span>
                                                <span class="slds-form-element__label">Show table</span>
                                            </label>
                                        </span>
                                    </div>
                                </div>
                            </div><!-- End Table checkbox -->
                            <!-- Start Raw Result checkbox  -->
                            <div style="display:inline-block; margin-right: 0px;">
                                <div class="slds-form-element">
                                    <div class="slds-form-element__control">
                                        <span class="slds-checkbox">
                                            <input type="checkbox" id="showRawResult" name="showRawResult" />
                                            <label class="slds-checkbox__label" for="showRawResult">
                                                <span class="slds-checkbox_faux"></span>
                                                <span class="slds-form-element__label">Show raw SOQL</span>
                                            </label>
                                        </span>
                                    </div>
                                </div>
                            </div><!-- End Raw Result checkbox  -->
                            <!-- Start CSV checkbox  -->
                            <div style="display:inline-block; margin-right: 0px;">
                                <div class="slds-form-element">
                                    <div class="slds-form-element__control">
                                        <span class="slds-checkbox">
                                            <input type="checkbox" id="showCSVResult" name="showCSVResult" />
                                            <label class="slds-checkbox__label" for="showCSVResult">
                                                <span class="slds-checkbox_faux"></span>
                                                <span class="slds-form-element__label">Show CSV</span>
                                            </label>
                                        </span>
                                    </div>
                                </div>
                            </div><!-- End CSV checkbox  -->
                            <!-- Start Permalink Checkbox -->
                            <div style="display:inline-block; margin-right: 0px;">
                                <div class="slds-form-element">
                                    <div class="slds-form-element__control">
                                        <span class="slds-checkbox">
                                            <input type="checkbox" id="showPermalink" name="showPermalink" />
                                            <label class="slds-checkbox__label" for="showPermalink">
                                                <span class="slds-checkbox_faux"></span>
                                                <span class="slds-form-element__label">Show Permalink</span>
                                            </label>
                                        </span>
                                    </div>
                                </div>
                            </div><!-- End Permalink Checkbox -->
                            <!-- Start Include delete checkbox  -->
                            <div style="display:inline-block;">
                                <div class="slds-form-element">
                                    <div class="slds-form-element__control">
                                        <span class="slds-checkbox">
                                            <input type="checkbox" id="includeDeletedRecords" name="includeDeletedRecords" />
                                            <label class="slds-checkbox__label" for="includeDeletedRecords">
                                                <span class="slds-checkbox_faux"></span>
                                                <span class="slds-form-element__label">Include deleted records</span>
                                            </label>
                                        </span>
                                    </div>
                                </div>
                            </div><!-- End Include delete checkbox  -->
                        </div><!-- End Display Options -->
                        </div>
                    </div>

                    <textarea id="queryString" name="queryString" rows="6" class="textareaStyle codeStyle" selected="yes">SELECT id, lastname, firstname, account.id, account.name FROM contact LIMIT 100</textarea>

                    <!-- Start query submit and display options -->
                    <div style="margin-top: 10px;">
                        <!-- Run Button -->
                        <div style="display:inline-block; margin-right: 30px;">
                            <input value=" Run " class="btn slds-button slds-button_brand" title="Go" name="Go" type="submit" />
                        </div>
                    </div><!-- End query submit and display options -->
                </form>
                <br/>
                <div id="queryStatsDiv" style=""></div>
                <!-- Optional Displays -->
                <div id="permalinkDiv" style="display: none;"></div>
                <div id="csvDiv" style="display: none;"></div>
                <div id="rawResultDiv" style="display: none;"></div>
                <div id="result"></div>
            </section>

            <!-- Footer -->
            <section class="floating-section">
                <div class="slds-grid slds-wrap">
                    <div class="slds-size_1-of-2">
                        <div class="slds-text-heading_medium slds-m-around_x-small">
                            Tips
                        </div>
                        <div class="slds-box slds-box_x-small slds-m-around_x-small">
                            <i>1. Try <span class="codeStyle">DESC objectName</span> for a list of fields for that object.</i><br/>
                            <i>2. Try <span class="codeStyle">SELECT * FROM objectName</span> to select all fields.</i><br/>
                            <i>3. Try <span class="codeStyle">LIST OBJECTS</span> for a list of all Sobjects.</i><br/>
                        </div>
                    </div>
                    <div class="slds-size_1-of-2">
                        <div class="slds-text-heading_medium slds-m-around_x-small">
                            Notes
                        </div>
                        <div class="slds-box slds-box_x-small slds-m-around_x-small">
                            <i>1. Don't include base64 fields in your query. If you do, you'll only see the 1st row of results.</i><br/>
                            <i>2. Database query time only includes time for the sforce.connection.query() call. It does not include HTML rendering time.</i><br/>
                            &nbsp;<br/>
                        </div>
                    </div>
                    <div class="slds-size_2-of-2">
                        <div class="slds-box slds-box_x-small slds-text-align_center slds-m-around_x-small" style="border:none;">
                            <i>By Glenn Weinstein, (c) Appirio. Uses SFDC API 42.0 (Spring '18).</i>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </body>
</apex:page>